#!/usr/bin/env bash

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Change to the script directory
cd "$SCRIPT_DIR"

# Check if Java is available
if ! command -v java &> /dev/null; then
    echo "Error: Java is not installed or not in PATH" >&2
    exit 1
fi

# Check Java version (we need at least Java 11)
JAVA_VERSION=$(java -version 2>&1 | head -n 1 | cut -d'"' -f2 | cut -d'.' -f1)
if [ "$JAVA_VERSION" -lt 11 ] && [ "$JAVA_VERSION" != "11" ]; then
    echo "Error: Java 11 or higher is required (found version $JAVA_VERSION)" >&2
    exit 1
fi

# Check if Maven is available for building
if ! command -v mvn &> /dev/null; then
    echo "Error: Maven is not installed. Please install Maven to build the project" >&2
    exit 1
fi

# Path to the JAR file
JAR_FILE="$SCRIPT_DIR/target/calculator-app-1.0-SNAPSHOT-jar-with-dependencies.jar"

# Check if JAR exists, if not build it
if [ ! -f "$JAR_FILE" ]; then
    echo "Building Java Calculator MCP server..." >&2
    mvn clean package -DskipTests > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "Error: Failed to build the project. Run 'mvn clean package' to see the error" >&2
        exit 1
    fi
fi

# Check if JAR was created successfully
if [ ! -f "$JAR_FILE" ]; then
    echo "Error: JAR file not found at $JAR_FILE" >&2
    echo "Please run 'mvn clean package' in the java directory" >&2
    exit 1
fi

# Default port
PORT=${MCP_PORT:-8080}

# Check if port is already in use
if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo "Error: Port $PORT is already in use" >&2
    echo "You can set a different port using MCP_PORT environment variable" >&2
    exit 1
fi

echo "Starting JavaCalc MCP Server on http://localhost:$PORT" >&2
echo "MCP endpoint: http://localhost:$PORT/mcp" >&2
echo "Health check: http://localhost:$PORT/health" >&2
echo "Press Ctrl+C to stop the server" >&2

# Run the MCP HTTP server
exec java -jar "$JAR_FILE"